import { ListView }from "std-widgets.slint";
import { Theme, Icons } from "../../theme.slint";
import { Util } from "../../util.slint";
import { Logic } from "../../logic.slint";
import { Store } from "../../store.slint";

import { SettingEntryV2, CenterLayout, Divider, Label, IconBtn } from "../../base/widgets.slint";

export component Body inherits Rectangle {
    TouchArea {
        clicked => {
            Store.edit-entry = Store.clean-entry;
        }
    }

    lv := ListView {
        vertical-scrollbar-policy: always-off;

        for entry[index] in Store.todo-entries: VerticalLayout {
            padding-bottom: Theme.padding * 2;

            Rectangle {
                border-radius: Theme.border-radius;
                border-color: Store.edit-entry.uuid == entry.uuid ? Theme.secondary-brand-color : Theme.base-border-color;
                border-width: 1px;

                drop-shadow-blur: Theme.padding * 2;
                drop-shadow-color: Theme.base-background-drop-shadow;

                background: ta.has-hover || outer-ta.has-hover ? Theme.secondary-background : Theme.base-background;

                outer-ta := TouchArea {
                    clicked => {
                        Store.edit-entry = entry;
                    }
                }

                VerticalLayout {
                    private property <bool> is-show-note: entry.is-open && entry.note != "";

                    alignment: LayoutAlignment.start;
                    padding: Theme.padding * 2;

                    title-rect := Rectangle {

                        HorizontalLayout {
                            alignment: LayoutAlignment.space-between;
                            spacing: Theme.spacing * 2;
                            padding: Theme.spacing;

                            lb := Label {
                                overflow: elide;
                                text: entry.title;
                                font-size: Theme.title4-font-size;
                                color: Theme.primary-text-color;
                                font-weight: Theme.bold-font-weight;
                            }

                            if entry.note != "": VerticalLayout {
                                alignment: LayoutAlignment.center;
                                Image {
                                    width: Theme.icon-size;
                                    height: self.width;
                                    colorize: Theme.icon-color;
                                    source: entry.is-open ? Icons.arrow-down : Icons.arrow-up;
                                }
                            }
                        }

                        ta := TouchArea {
                            clicked => {
                                Store.edit-entry = entry;
                            }

                            double-clicked => {
                                entry.is-open = !entry.is-open;
                                Store.edit-entry = entry;
                                Logic.todo-update(Store.edit-entry);
                            }
                        }
                    }

                    if is-show-note: Divider { }

                    Rectangle {
                        height: parent.is-show-note ? note-lb.preferred-height + Theme.padding * 2 : 0;

                        width: root.width - Theme.padding * 2;
                        clip: true;

                        animate height {
                            duration: Theme.default-animate-duration;
                            easing: ease-in-out;
                        }

                        note-lb := Label {
                            x: Theme.padding;
                            y: Theme.padding;
                            width: 100%;
                            text: entry.note;
                            font-size: Theme.default-font-size;
                            color: Theme.regular-text-color;
                            wrap: word-wrap;
                        }
                    }
                }
            }
        }
    }
}
